/
  Welcome to Neon! ðŸ‘‹ Letâ€™s take a quick dive into the language.

  Below is a simple "Hello, World!" example:
/

fn hello() {
  "Hello"
}

/
  As you can see, there's no need for a `return` keywordâ€”the function automatically 
  returns the string "Hello" since the body is an expression. âœ…

  To declare variables, use the `let` keyword:
/

let greeting = hello()

/
  For control flow, use the `if` and `else` keywords:
/

let message = if greeting == "Hello" {
  " world!"
} else {
  print("Woopsie ðŸ˜±")
}

/
  In Neon, `if` statements are also expressions, returning the value of the evaluated branch. 
  Even entire Neon scripts are expressionsâ€”this script, 
  for example, will evaluate to the result of `hello() + message`
/

hello() + message

/
  When you run this script, you should see "Hello world!" as the output. 

  Neon is written in Rust, and the version youâ€™re using now is compiled to 
  WebAssembly to run in the browser. All error messages and syntax highlighting 
  are custom-built with Neon's own parser, lexer, interpreter, and semantic analyzer. ðŸ§ 

  If you want to explore more, check out the examples! Thanks for trying out Neonâ€”itâ€™s been a blast to create it. ðŸŽ‰
/
